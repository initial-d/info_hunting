/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package actions;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.net.InetAddress;
import java.util.Iterator;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.dom4j.Document; 
import org.dom4j.DocumentException; 
import org.dom4j.Element; 
import org.dom4j.io.OutputFormat;
import org.dom4j.io.SAXReader; 
import org.dom4j.io.XMLWriter;
import org.xml.sax.SAXException;


import java.net.*;

import com.opensymphony.xwork2.ActionSupport;
import com.opensymphony.xwork2.ActionContext;

/**
 * <p>类名：deleteByTime
 * <p>作用：按时间删除
 * <p>@author :born to try
 */
public class deleteByTime extends ActionSupport{
	private int year;
	private int month;
	private int day;	
	public int getYear(){
		return year;
	}
	public int getMonth(){
		return month;
	}
	public int getDay(){
		return day;
	}
	public void setYear(int year){
		this.year=year;
	}
	public void setMonth(int month){
		this.month=month;
	}
	public void setDay(int day){
		this.day=day;
	}
	
	public String execute()throws Exception{
		//获得要删除的资源的文件名
        int yearTime=year;
        int monthTime=month;
        int dayTime=day;
        
        
        int sum=year*10000+month*100+day;
      //  System.out.println(sum);
    //    System.out.println(year+month+day+"大家好！！！！！！");
        //获得test.xml文件路径
        String path = getPath("webapps");
        String recordpath= path+"\\"+"test.xml";
		 //建立到test.xml的解析
        Document doc = null;
   	    Element root=null;
        SAXReader xmlReader = new SAXReader();
        try {
			doc = xmlReader.read(recordpath);
		} catch (DocumentException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		//	System.out.println("出问题了！");
		}
		
		
        root = doc.getRootElement(); 
        //创建新的 ElementIterator，沿 Element 树进行迭代；

  
                
                
				//循环遍历 这个xml中的 记录，找到要删除的资源记录并把它删除
				
					for(Iterator  it = root.elementIterator("resourceitem"); it.hasNext();){
					Element elementNode=  (Element) it.next(); 
					String date=elementNode.elementText("date");
					
					//如果这条记录的url中包含传递过来的fileName，说明这就是要删除的记录，把它删除，并跳出循环
					
					
					String date1=date.substring(0,4);
	 				String date2=null;
	 				String date3=null;
	 			
	 				if(date.substring(6,7).equals("-")){
	 					date2="0"+date.substring(5,6);
	 					if(date.substring(8,9).equals(" ")){
	 						date3="0"+date.substring(7,8);
	 					}else{
	 						date3=date.substring(7,9);
	 					}
	 					
	 				}else{
	 					date2=date.substring(5,7);
	 					if(date.substring(9,10).equals(" ")){
	 						date3="0"+date.substring(8,9);
	 					}else{
	 						date3=date.substring(8,10);
	 					}
	 					
	 				}
	 				
	 				
	 				
	 				String date4=date1+date2+date3;
	 				int s;
	 				s=Integer.parseInt(date4);
					
					
					
			
					    if(s<=sum){
					    	it.remove();
					    	//System.out.println("hhh");
					    	
						    
					    }
					
			    }
				try{  
					 OutputFormat format = OutputFormat.createPrettyPrint();
						//指定XML字符集编码 
						format.setEncoding("GBK");
						//创建xml流
					  XMLWriter writer = new XMLWriter(new FileWriter(new File(recordpath)),format);     
					  writer.write(doc);                               
					  writer.close();                                                       
					  }   
					  catch(Exception ex){
						  System.out.println("ex");
					  }
					  
					  return SUCCESS;
					  
	}
	public String getPath(String Webapps){
		
		//在本地目录下新建一个文件存放结果用于测试 检索是否正确
		String   path   =  System.getProperty("catalina.home");	
		
		//因为不同的环境中user.dir指向的有的是tomcat根目录，有的是bin目录，
		 // 所以下面对 bin的位置进行判断，如果目录中含有bin则进行去掉bin目录的处理
		int binindex=path.indexOf("bin");
        if(binindex!=-1){
        	path=path.substring(0, binindex-1);
        }			
		path=path+"\\"+Webapps;
		return path;		    	
  }
}